alias fuck='eval $(thefuck $(fc -ln -1)); history -r'
alias sp='ssh services-prod01.iad2'
alias sd='ssh services-dev.lab'
alias mdl='markdownlinker doc-raw.md > DOC.md'
alias mergemaster='git checkout master && git merge --no-ff develop'
alias pushtagmaster='git push origin --tags master && git checkout develop && git merge master && git push origin develop'
alias cleanpyc='find . -name '*.pyc' -exec rm {} \;'
alias bumpversion='bumpversion --verbose'

alias vs='vagrant ssh'
alias vh='vagrant halt'
alias vu='vagrant up'
alias v.create='mkvirt'
alias v.kill='pyenv uninstall -f ${PWD##*/}'
alias v.recreate='v.kill && v.create'
alias pip_upgradeall='pip freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip install -U'

# Easier navigation: .., ..., ...., ..... and -
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias -- -="cd -"

# Shortcuts
alias gd="cd ~/Google\ Drive"
alias cs="cd ~/DropBox/ComputerSetup"
alias dl="cd ~/Downloads"
alias dt="cd ~/Desktop"
alias db="cd ~/DropBox"
alias p="cd ~/workspace"
alias tp="cd ~/TestProjects"
alias dot="cd ~/dotfiles"
alias g="git"
alias h="history"
alias j="jobs"
alias kp="killall python"

# easy management of dotfiles
alias commitdot="cd ~/dotfiles && git add . && git commit -m 'standard commit' && git push"
alias syncdot="pushd ~/dotfiles && git pull && ./sync.sh && popd && reload"

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
	colorflag="--color"
else # OS X `ls`
	colorflag="-G"
fi

# List all files colorized in long format
alias l="ls -lF ${colorflag}"

# List all files colorized in long format, including dot files
alias la="ls -laF ${colorflag}"

# List only directories
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"

# Always use color output for `ls`
alias ls="command ls ${colorflag}"
export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'

# Enable aliases to be sudo’ed
alias sudo='sudo '

# Get week number
alias week='date +%V'

# Stopwatch
alias timer='echo "Timer started. Stop with Ctrl-D." && date && time cat && date'

# IP addresses
#alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias ip="curl icanhazip.com"
alias localip="ipconfig getifaddr en0"
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"


# View HTTP traffic
#alias sniff="sudo ngrep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
alias httpdump="sudo tcpdump -i en0 -n -s 0 -w - | grep -a -o -E \"Host\: .*|GET \/.*\""

# URL-encode strings
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);"'

# Ring the terminal bell, and put a badge on Terminal.app’s Dock icon
# (useful when executing time-consuming commands)
alias badge="tput bel"

# Intuitive map function
# For example, to list all directories that contain a certain file:
# find . -name .gitattributes | map dirname
alias map="xargs -n1"

# Make Grunt print stack traces by default
command -v grunt > /dev/null && alias grunt="grunt --stack"

# Reload the shell (i.e. invoke as a login shell)
alias reload="exec $SHELL -l"

if [[ "$OSTYPE" == "linux-gnu" ]]; then
	echo
elif [[ "$OSTYPE" == "darwin"* ]]; then
	source ~/.aliases-mac
elif [[ "$OSTYPE" == "cygwin" ]]; then
        # POSIX compatibility layer and Linux environment emulation for Windows
	echo
elif [[ "$OSTYPE" == "msys" ]]; then
        # Lightweight shell and GNU utilities compiled for Windows (part of MinGW)
	echo
elif [[ "$OSTYPE" == "win32" ]]; then
        # I'm not sure this can happen.
	echo
elif [[ "$OSTYPE" == "freebsd"* ]]; then
	echo
else
	echo
fi
